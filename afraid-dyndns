#! /bin/bash
# Retrieves the outward facing IP address from your Airport Extreme
# router, and if it has changed, tell freedns.afraid.org.
#
# By checking your router, it avoids generating any internet traffic
# and freedns.afraid.org activity unless your IP address changes.
#
# Directions:
# 0) Adjust PATH if necessary.  No need for MacOS X.
#
# 1) Create a text file "$HOME/.afraid-dyndns.dynkey" and add one line
#    to it with your dynamic authentication token from
#    http://freedns.afraid.org/dynamic/ .
#
# 2) Create a text file "$HOME/.afraid-dyndns.email" and add one line
#    to it with a comma separated list of the email addresses to
#    notify when the IP address changes.  This file is optional if you
#    do not want to be notified via email.
#
# 3) Add an entry to your crontab to run this script periodically.
#    Script can run as you.  It does not require any privileges to run.
#

shopt -s extglob

export PATH=/bin:/usr/bin:/sbin:/usr/sbin

typeset fpfx="$HOME/.afraid-dyndns"
typeset ipfile="${fpfx}.ip"
typeset dynkeyfile="${fpfx}.dynkey"
typeset emailfile="${fpfx}.email"

function Fail
{
	echo >&2 "$@"
	exit 1
}

# Retrieve the outward facing IP address from Airport Extreme router.
function AirportIP
{
        typeset tempfile=$(mktemp -t myip)
        dns-sd -X > $tempfile &
        sleep 1
        killall -9 dns-sd
        typeset ip=$(grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' $tempfile | awk '{print $3}') || return 1
	echo "$ip"
}


# check for the existence of the dynkeyfile
[[ -r $dynkeyfile ]] || \
	Fail "Need to create the file '$dynkeyfile' with your key."

# read the dynkey file into an array and validate
IFS=$'\r\n' GLOBALIGNORE='*' :; typeset dynkeys=($(cat $dynkeyfile))
for dynkey in "${dynkeys[@]}"; do
	[[  $dynkey == @(+([a-zA-Z0-9])) ]] || Fail "Dynamic key seems bad."
done


typeset tellme=''
if [[ -r $emailfile ]]
then
	typeset me=$(< "$emailfile")
	tellme=(mail -s 'new ip address' "$me")
fi

typeset ip=$(AirportIP) || Fail "Failed to get Airport IP."

[[ $ip == @(+([0-9]).+([0-9]).+([0-9]).+([0-9])) ]] || \
	Fail "AirportIP return was invalid: '$ip'."

typeset oldip=""
[[ ! -r $ipfile ]] || oldip=$(< "$ipfile") || Fail "Can't read '$ipfile'."

if [[ $oldip != $ip ]]
then
        # ip address has changed, so tell  me
	[[ -z $tellme ]] || \
		{ echo -e "Old = $oldip\nNew = $ip" | "${tellme[@]}"; }

        # loop over all of my keys
	for dynkey in "${dynkeys[@]}"
	do
		# construct the endpoint update with the dynkey
		typeset tellafraid=(\
			curl -s "http://freedns.afraid.org/dynamic/update.php?$dynkey")

                # check for success of update
		"${tellafraid[@]}" || \
			echo "Failed to tell freedns.afraid.org of IP change." >&2
	done
	echo "$ip" > "$ipfile"
fi
